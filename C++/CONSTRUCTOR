
// CONSTRUCTOR


#include<iostream>
using namespace std;

class Hero {
    
    // properties
    private:
    int health;

    public:
    char level;

    // Constructor
    Hero() {
        cout << "Constructor called " << endl;
    }

    // Paramterised constructor
    Hero(int health) {
        cout << "this -> " << this <<endl;
        this -> health = health;
    }

    Hero(int health, char level) {
        this -> level = level;
        this -> health = health;
    }

    // Copy constructor
    Hero (Hero& temp) {
        cout<<"Copy constructor called " << endl;
        this->health = temp.health;
        this->level = temp.level;
    }
    void print(){
        cout << "Health is " << this->health << endl;
        cout << "Level is " << this->level << endl;
    }

    int getHealth() {
        return health;
    }

    char getLevel() {
        return level;
    }

    void setHealth(int h) {
        health = h;
    }

    void setLevel(char ch) {
        level = ch;
    }

};

int main(){

    Hero S(70, 'C');
    S.print();

    // Copy constructor
    Hero R(S);
    R.print();
/*
    // Object created statically
    
    Hero ramesh(10);
    ramesh.print();

    // Object created dynamically
    Hero *h = new Hero(11);
    h->print();


    Hero temp(22, 'B');
    temp.print();
*/



    return 0;
}

